<details class="inline">
  <slot />
</details>

<!--
  I needed to make these styles global in order to target underneath.
  Since we are still nesting _under_ details.inline, this should not leak
-->
<style is:global>
  details.inline {
    display: inline-block;
    baseline-source: first;

    & > summary {
      cursor: pointer;
      text-decoration: underline;
      text-decoration-thickness: 2px;
      color: var(--primary-link-color);
      text-decoration-color: var(--secondary-link-color);

      /*
        inline-block is necessary for chrome to not break the line after the
        discolsure, and also functions to turn off the default disclosure
        triangle so we can add our own
      */
      display: inline-block;
      position: relative;
      padding-inline-start: 2ch;
    }

    @supports not selector(::details-content) {
      & > :not(summary) {
        position: absolute;
        left: 0;
        width: 100%;
      }
    }
    @supports selector(::details-content) {
      &::details-content {
        position: absolute;
        left: 0;
        width: 100%;
      }
    }
  }

  /* fake, animation-friendly disclosure triangle */
  details.inline > summary::before {
    content: "";
    color: var(--primary-link-color);
    border-width: 0.3em 0 0.3em 0.6em;
    border-style: solid;
    border-color: transparent transparent transparent currentColor;
    position: absolute;
    top: 0.4em;
    left: 0.4ch;
    transform: rotate(0);
    transform-origin: 0.2rem 50%;
    transition: 0.25s transform ease;
  }
  details.inline[open] > summary:before {
    transform: rotate(90deg);
  }
</style>

<script>
  document
    .querySelectorAll<HTMLDetailsElement>("details.inline")
    .forEach((el) => {
      el.addEventListener("toggle", () => {
        const divEl = el.children[1];

        el.style.paddingBlockEnd = "0px";

        const targetHeight = window.getComputedStyle(divEl).height;
        if (el.open) {
          el.style.paddingBlockEnd = targetHeight;
        }
      });
    });
</script>
